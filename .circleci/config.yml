version: 2.1

orbs:
  python: circleci/python@1.0.0
  aws-cli: circleci/aws-cli@1.2.1

jobs:
  build-and-test:
    executor:
      name: python/default
      tag: '3.11'
    steps:
      - checkout
      - run:
          name: Setup Virtual Env
          command: |
            python3 -m venv venv
            echo "source venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Create zipfile archive of dependencies
          command: |
            cd venv/lib/python3.11/site-packages
            zip -r9 ../../../../api.zip .
      - run:
          name: Add App To Zipfile
          command: zip -g ./api.zip -r api
      - persist_to_workspace:
          root: .
          paths:
            - "api.zip"
  deploy-dev:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Upload to S3
          command: aws s3 cp api.zip s3://serverless-fastapi-ed1/api.zip
      - run:
          name: Deploy new Lambda
          command: aws lambda update-function-code --function-name serverless-fastapi-lambda --s3-bucket serverless-fastapi-ed1 --s3-key api.zip
  build:
    working_directory: ~/repo/client
    docker:
      - image: cimg/node:18.17.0
    steps:
      - checkout
      - run:
          name: Update NPM
          command: "sudo npm install -g npm"
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Build React App
          command: npm run build
      - save_cache:
          key: app-build-cache-{{ .Branch }}
          paths:
            - ./build
      - run:
          name: Deploy to Netlify
          command: ./node_modules/.bin/netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod --dir=build

workflows:
  build-test-and-deploy:
    jobs:
      - build-and-test:
          context: cicd-dev
          filters:
            branches:
              only:
                - main
      - deploy-dev:
          context: cicd-dev
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - main
      - build:
          context: cicd-dev
          filters:
            branches:
              only:
                - main
